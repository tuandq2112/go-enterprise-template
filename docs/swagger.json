{
  "swagger": "2.0",
  "info": {
    "title": "Go Clean DDD ES Template API",
    "description": "A comprehensive API for the Go Clean DDD ES Template with Event Sourcing",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "",
  "schemes": [
    "http",
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/api/v1/users": {
      "get": {
        "operationId": "UserService_ListUsers",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userListUsersResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "List all users",
        "tags": [
          "UserService"
        ]
      },
      "post": {
        "operationId": "UserService_CreateUser",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/userCreateUserRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userCreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Create a new user",
        "tags": [
          "UserService"
        ]
      }
    },
    "/api/v1/users/{id}": {
      "delete": {
        "operationId": "UserService_DeleteUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userDeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Delete user",
        "tags": [
          "UserService"
        ]
      },
      "get": {
        "operationId": "UserService_GetUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userGetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Get user by ID",
        "tags": [
          "UserService"
        ]
      },
      "put": {
        "operationId": "UserService_UpdateUser",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserServiceUpdateUserBody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/userUpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Update user",
        "tags": [
          "UserService"
        ]
      }
    },
    "/v1/auth/change-password": {
      "post": {
        "operationId": "AuthService_ChangePassword",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authChangePasswordRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authChangePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Change password",
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "operationId": "AuthService_Login",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authLoginRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authLoginResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Login user",
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/refresh": {
      "post": {
        "operationId": "AuthService_RefreshToken",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authRefreshTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authRefreshTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Refresh JWT token",
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/register": {
      "post": {
        "operationId": "AuthService_Register",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authRegisterRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authRegisterResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Register a new user",
        "tags": [
          "AuthService"
        ]
      }
    },
    "/v1/auth/validate": {
      "post": {
        "operationId": "AuthService_ValidateToken",
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/authValidateTokenRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/authValidateTokenResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "summary": "Validate JWT token",
        "tags": [
          "AuthService"
        ]
      }
    }
  },
  "definitions": {
    "UserServiceUpdateUserBody": {
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "UpdateUserRequest",
      "type": "object"
    },
    "authChangePasswordRequest": {
      "properties": {
        "currentPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      },
      "title": "Change password request",
      "type": "object"
    },
    "authChangePasswordResponse": {
      "properties": {
        "message": {
          "type": "string"
        },
        "success": {
          "type": "boolean"
        }
      },
      "title": "Change password response",
      "type": "object"
    },
    "authLoginRequest": {
      "properties": {
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "Login request",
      "type": "object"
    },
    "authLoginResponse": {
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "token": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "Login response",
      "type": "object"
    },
    "authRefreshTokenRequest": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "title": "Refresh token request",
      "type": "object"
    },
    "authRefreshTokenResponse": {
      "properties": {
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "token": {
          "type": "string"
        }
      },
      "title": "Refresh token response",
      "type": "object"
    },
    "authRegisterRequest": {
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "title": "Register request",
      "type": "object"
    },
    "authRegisterResponse": {
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "token": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "Register response",
      "type": "object"
    },
    "authValidateTokenRequest": {
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "title": "Validate token request",
      "type": "object"
    },
    "authValidateTokenResponse": {
      "properties": {
        "email": {
          "type": "string"
        },
        "expiresAt": {
          "format": "date-time",
          "type": "string"
        },
        "roles": {
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "userId": {
          "type": "string"
        }
      },
      "title": "Validate token response",
      "type": "object"
    },
    "protobufAny": {
      "additionalProperties": {},
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "rpcStatus": {
      "properties": {
        "code": {
          "format": "int32",
          "type": "integer"
        },
        "details": {
          "items": {
            "$ref": "#/definitions/protobufAny",
            "type": "object"
          },
          "type": "array"
        },
        "message": {
          "type": "string"
        }
      },
      "type": "object"
    },
    "userCreateUserRequest": {
      "properties": {
        "email": {
          "type": "string"
        },
        "name": {
          "type": "string"
        }
      },
      "title": "CreateUserRequest",
      "type": "object"
    },
    "userCreateUserResponse": {
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      },
      "title": "CreateUserResponse",
      "type": "object"
    },
    "userDeleteUserResponse": {
      "properties": {
        "success": {
          "type": "boolean"
        }
      },
      "title": "DeleteUserResponse",
      "type": "object"
    },
    "userGetUserResponse": {
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      },
      "title": "GetUserResponse",
      "type": "object"
    },
    "userListUsersResponse": {
      "properties": {
        "users": {
          "items": {
            "$ref": "#/definitions/userUser",
            "type": "object"
          },
          "type": "array"
        }
      },
      "title": "ListUsersResponse",
      "type": "object"
    },
    "userUpdateUserResponse": {
      "properties": {
        "user": {
          "$ref": "#/definitions/userUser"
        }
      },
      "title": "UpdateUserResponse",
      "type": "object"
    },
    "userUser": {
      "properties": {
        "createdAt": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "updatedAt": {
          "type": "string"
        }
      },
      "title": "User entity",
      "type": "object"
    }
  },
  "securityDefinitions": {
    "BearerAuth": {
      "description": "JWT token in format: Bearer \u003ctoken\u003e",
      "in": "header",
      "name": "Authorization",
      "type": "apiKey"
    }
  },
  "security": [
    {
      "BearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Auth",
      "description": "Auth operations"
    },
    {
      "name": "User",
      "description": "User operations"
    }
  ]
}